#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W         &kp E         &kp R      &kp T                                                               &kp Y      &kp U  &kp I        &kp O         &kp P
&mt LEFT_CONTROL A  &kp S         &kp D         &kp F      &kp G      &mkp MCLK                   &lt 5 RC(SPACE)              &kp H      &kp J  &kp K        &kp L         &lt 1 MINUS
&mt LEFT_SHIFT Z    &kp X         &kp C         &kp V      &kp B      &mt LEFT_COMMAND SPACE      &mt RIGHT_COMMAND BACKSPACE  &kp N      &kp M  &lt 3 COMMA  &lt 4 PERIOD  &kp RIGHT_SHIFT
&kp LCTRL           &kp LEFT_WIN  &kp LEFT_ALT  &mkp LCLK  &mkp RCLK  &kp ENTER                   &kp RIGHT_ALT                &kp RCTRL                                    &mkp MCLK
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW_AND_FUNCTIONS {
            bindings = <
&kp F1   &kp F2   &kp F3             &kp F4             &kp F5                                                         &kp LC(LEFT_ARROW)  &kp LC(DOWN_ARROW)  &kp RC(UP_ARROW)     &kp RC(RIGHT)        &trans
&kp F6   &kp F7   &kp F8             &kp F9             &kp F10        &none              &kp RG(RC(RA(LEFT_ARROW)))   &kp LEFT_ARROW      &kp DOWN            &kp UP_ARROW         &kp RIGHT            &trans
&kp F11  &kp F12  &kp LA(LG(LC(M)))  &kp LG(LC(LA(N)))  &kp LG(SPACE)  &kp RC(SPACE)      &kp RG(RC(RA(RIGHT_ARROW)))  &kp RG(LEFT_ARROW)  &kp RA(LEFT_ARROW)  &kp RA(RIGHT_ARROW)  &kp RG(RIGHT_ARROW)  &trans
&trans   &trans   &trans             &trans             &trans         &trans             &trans                       &trans                                                                            &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        layer_5 {
            bindings = <
&kp EXCLAMATION  &kp AT    &kp HASH   &kp DOLLAR  &kp PERCENT                      &kp CARET      &kp AMPERSAND     &kp STAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp N1           &kp N2    &kp N3     &kp N4      &kp N5       &trans      &trans  &kp N6         &kp N7            &kp N8     &kp N9                &kp N0
&kp BACKSLASH    &kp SEMI  &kp COLON  &trans      &trans       &trans      &trans  &kp LESS_THAN  &kp GREATER_THAN  &kp COMMA  &kp PERIOD            &kp SLASH
&trans           &trans    &trans     &trans      &trans       &trans      &trans  &trans                                                            &trans
            >;
        };

        NumberAndBraces {
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5                    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE    &kp RIGHT_BRACE    &none
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &none      &none  &kp LESS_THAN         &kp GREATER_THAN       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none
&none   &none   &none   &none   &none   &none      &none  &none                 &none                  &kp COMMA         &kp PERIOD         &kp SLASH
&none   &none   &none   &none   &none   &none      &none  &none                                                                             &none
            >;
        };

        Symbols {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN    &kp HASH   &kp DOLLAR  &kp PERCENT                    &kp CARET  &kp AMPERSAND     &kp STAR           &kp MINUS   &kp UNDER
&kp QUESTION     &kp BACKSLASH  &kp GRAVE  &kp TILDE   &kp PIPE     &none      &none  &kp EQUAL  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp COLON   &kp SEMICOLON
&none            &none          &none      &none       &none        &none      &none  &kp PLUS   &kp QUESTION      &kp COMMA          &kp PERIOD  &kp SLASH
&none            &none          &none      &none       &none        &none      &none  &none                                                       &none
            >;
        };

        ConfigurationLayer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none      &none  &none  &none  &none  &none  &bt BT_CLR
&none         &none         &none         &none         &none         &none      &none  &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none      &none  &none                       &none
            >;
        };
    };
};
