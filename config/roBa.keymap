#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_MOUSE_SCRL_VAL 140

&mt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    };

    behaviors {
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R      &kp T                                                               &kp Y      &kp U  &kp I      &kp O    &kp P
&mt LCTRL A       &kp S         &kp D         &kp F      &kp G      &mkp MCLK                   &lt 3 RC(SPACE)              &kp H      &kp J  &kp K      &kp L    &lt 1 MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V      &kp B      &mt LEFT_COMMAND SPACE      &mt RIGHT_COMMAND BACKSPACE  &kp N      &kp M  &kp COMMA  &kp DOT  &kp RIGHT_SHIFT
&mo 3             &kp LEFT_WIN  &kp LEFT_ALT  &mkp LCLK  &mkp RCLK  &kp ENTER                   &lt 2 TAB                    &kp RCTRL                             &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        ARROW_AND_FUNCTIONS {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2       &kp NUMBER_3     &kp NUMBER_4       &kp N5                                                                    &kp LC(LEFT_ARROW)  &kp LC(DOWN_ARROW)  &kp RC(UP_ARROW)     &kp RC(RIGHT)        &trans
&kp NUMBER_6  &kp N7             &kp NUMBER_8     &kp N9             &kp N0             &none                     &none                        &kp LEFT_ARROW      &kp DOWN            &kp UP_ARROW         &kp RIGHT            &trans
&kp K_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp LG(LC(LA(N)))  &kp LG(LC(LA(M)))  &kp LA(LC(LG(LEFT)))      &kp RG(RC(RA(RIGHT_ARROW)))  &kp RG(LEFT_ARROW)  &kp RA(LEFT_ARROW)  &kp RA(RIGHT_ARROW)  &kp RG(RIGHT_ARROW)  &trans
&trans        &trans             &trans           &trans             &trans             &trans                    &trans                       &trans                                                                            &trans
            >;

            sensor-bindings = <&scroll_up_down>, <&scroll_up_down>;
        };

        Symbols {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN       &kp HASH           &kp DOLLAR      &kp PERCENT                                &kp CARET      &kp AMPERSAND     &kp STAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp PLUS         &kp MINUS         &kp UNDER          &kp SLASH       &kp EQUAL        &none          &kp EQUAL  &kp BACKSLASH  &kp APOS          &kp APOS   &kp SEMI              &kp SEMI
&kp GRAVE        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp TILDE      &kp PIPE   &kp LESS_THAN  &kp GREATER_THAN  &kp COMMA  &kp PERIOD            &kp QUESTION
&none            &none             &none              &none           &none            &none          &none      &none                                                             &none
            >;
        };

        ConfigurationLayer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none      &none  &none  &none  &none  &none  &bt BT_CLR
&none         &none         &none         &none         &none         &none      &none  &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none      &none  &none                       &none
            >;
        };
    };
};
