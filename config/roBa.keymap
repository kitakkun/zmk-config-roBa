#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_MOUSE_SCRL_VAL 140

&mt {
    tapping-term-ms = <220>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    };

    behaviors {
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    macros {
        shift_double_tap: shift_double_tap {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp LEFT_SHIFT>;
            label = "SHIFT_DOUBLE_TAP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESCAPE Q      &kp W         &kp E           &kp R                 &kp T                                                                 &kp Y        &kp U  &kp I      &kp O      &kp P
&mt LCTRL A       &kp S         &kp D           &kp F                 &kp G                 &mkp MCLK                    &kp MINUS          &kp H        &kp J  &kp K      &kp L      &lt 1 COMMA
&mt LEFT_SHIFT Z  &kp X         &kp C           &kp V                 &kp B                 &kp LEFT_COMMAND             &kp RIGHT_COMMAND  &kp N        &kp M  &mkp LCLK  &mkp RCLK  &mt RIGHT_SHIFT PERIOD
&lt 3 TAB         &kp LEFT_WIN  &kp LG(LS(N5))  &mt LEFT_SHIFT SPACE  &mt LCTRL LEFT_SHIFT  &mt RIGHT_ALT LC(SPACE)      &kp BACKSPACE      &lt 2 ENTER                               &lt 1 ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUMBER_AND_ARROWS {
            bindings = <
&kp ESCAPE      &kp N7  &kp N8  &kp N9  &kp SLASH                                           &kp C_VOLUME_DOWN           &kp C_VOLUME_UP              &kp RG(RA(L))      &kp RG(SLASH)      &trans
&kp N0          &kp N4  &kp N5  &kp N6  &kp DOT    &none                 &kp K_MUTE         &kp LEFT_ARROW              &kp DOWN                     &kp UP_ARROW       &kp RIGHT          &kp LG(LA(L))
&kp LEFT_SHIFT  &kp N1  &kp N2  &kp N3  &kp COMMA  &kp LEFT_COMMAND      &kp RIGHT_COMMAND  &kp RG(RC(RA(LEFT_ARROW)))  &kp RA(RC(RG(RIGHT_ARROW)))  &kp RA(RC(RG(M)))  &kp RG(RC(RA(N)))  &trans
&trans          &trans  &trans  &trans  &trans     &trans                &trans             &trans                                                                                         &trans
            >;

            sensor-bindings = <&scroll_up_down>, <&scroll_up_down>;
        };

        Symbols {
            bindings = <
&kp PERCENT  &kp DOLLAR  &kp AMPERSAND  &kp CARET        &kp SLASH                            &kp BACKSLASH  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN     &kp GREATER_THAN
&kp AT_SIGN  &kp HASH    &kp STAR       &kp EQUAL        &kp PLUS      &trans         &trans  &kp UNDER      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON     &kp COLON
&kp GRAVE    &kp UNDER   &kp MINUS      &kp EXCLAMATION  &kp QUESTION  &kp TILDE      &trans  &kp PIPE       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES
&trans       &trans      &trans         &trans           &trans        &trans         &trans  &trans                                                                        &trans
            >;
        };

        ConfigurationLayer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none      &none  &none  &none  &none  &none  &bt BT_CLR
&none         &none         &none         &none         &none         &none      &none  &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none      &none  &none                       &none
            >;
        };
    };
};
